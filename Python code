from IPython.display import clear_output

def replay_question():
    replay = input(prompt="Would you like to play again? (yes or no)")
    return replay.lower() == "yes"
    
def replay_game():
    global endgame
    endgame = False
    global positions
    positions = {1:" ",2:" ",3:" ",4:" ",5:" ",6:" ",7:" ",8:" ",9:" "}
    clear_output(wait=True)
    board(positions)

def board(boardstate):
    print(f"   |   |   ")
    print(f" {boardstate[7]} | {boardstate[8]} | {boardstate[9]} ")
    print(f"   |   |   ")
    print("-----------")
    print(f"   |   |   ")
    print(f" {boardstate[4]} | {boardstate[5]} | {boardstate[6]} ")
    print(f"   |   |   ")
    print("-----------")
    print(f"   |   |   ")
    print(f" {boardstate[1]} | {boardstate[2]} | {boardstate[3]} ")
    print(f"   |   |   ")

def player_move(turn):
    if turn == True:
        player = player1
        playername = player1name
    else:
        player = player2
        playername = player2name
        
    newposition = int(input(prompt=f"{playername} choose your position (1-9) : "))
    if positions[newposition] != " ":
        newposition = int(input("This position is already taken please take an other one."))
    else:
        positions[newposition] = player

def gameover():
    global endgame
    endgame = True
    global winner
    winner = True


# Define the symbols and name of the two players
player1name = input(prompt="Player 1 what is your name?")
player2name = input(prompt="Player 2 what is your name?")
player1 = input(prompt=f"{player1name} choose your symbol (X or O) :").upper()
if player1 == "X":
    player2 = "O"
else: 
    player2 = "X"

    
# The game itself
player1turn = True
positions = {1:" ",2:" ",3:" ",4:" ",5:" ",6:" ",7:" ",8:" ",9:" "}
endgame = False
winner = False
board(positions)


while endgame != True:
    
    player_move(player1turn)
    
    clear_output(wait=True)
    
    board(positions)
    
    # Defines if the game is over.
    if positions[1] == positions[2] and positions[1] == positions[3] and positions[1] != " ": 
        gameover()
    elif positions[4] == positions[5] and positions[4] == positions[6] and positions[4] != " ":
        gameover()
    elif positions[7] == positions[8] and positions[7] == positions[9] and positions[7] != " ":
        gameover()
    elif positions[1] == positions[4] and positions[1] == positions[7] and positions[1] != " ":
        gameover()
    elif positions[2] == positions[5] and positions[2] == positions[8] and positions[2] != " ":
        gameover()
    elif positions[3] == positions[6] and positions[3] == positions[9] and positions[3] != " ":
        gameover()
    elif positions[1] == positions[5] and positions[1] == positions[9] and positions[1] != " ":
        gameover()
    elif positions[3] == positions[5] and positions[3] == positions[7] and positions[3] != " ":
        gameover()
    elif " " not in positions.values():
        endgame = True
        winner = False
    else:
        pass   

    # Changes player turn
    if player1turn == True:
        player1turn = False
    else : 
        player1turn = True

    # Checks if the game is over or not
    if endgame == True and winner == False:
        print("It's draw! Try again!")
        if replay_question():
            replay_game()
        else:
            break
    
    elif endgame == True:    
        if player1turn == False:
            print(f"Congratulations {player1name}!")
            if replay_question():
                replay_game()
            else:
                break
        else: 
            print(f"Congratulations {player2name}!")
            if replay_question():
                replay_game()
            else:
                break
    else:
        continue
        
        
clear_output(wait=True)
print("Thanks for playing! See you next time!")
